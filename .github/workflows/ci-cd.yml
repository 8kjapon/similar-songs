name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: github_actions_ci
          MYSQL_USER: test_user
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.5

      - name: Setup bundler
        run: gem install bundler

      - name: Bundle install
        run: bundle install

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h 127.0.0.1 --silent; do
            sleep 1
          done

      - name: Setup Database
        run: |
          cp config/database.ci.yml config/database.yml
          RAILS_ENV=test bundle exec rails db:create db:migrate

      - name: Build assets with esbuild
        run: |
          yarn install
          npm run build
        working-directory: .

      - name: Run Rubocop Check
        run: bundle exec rubocop

      - name: Run RSpec tests
        run: bundle exec rspec

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Deploy to production server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_APP_DIR: ${{ secrets.SERVER_APP_DIR }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -t -i private_key.pem -p $SERVER_PORT $SERVER_USER@$SERVER_HOST << EOF
            cd $SERVER_APP_DIR

            # 最新のコードのpullとDockerコンテナの停止
            git pull orign master
            docker compose -f docker-compose.production.yml down

            # Gemのインストール
            docker-compose -f docker-compose.production.yml run --rm web bundle install

            # DBのマイグレーション
            docker-compose -f docker-compose.production.yml run --rm web bundle exec rails db:migrate

            # アセットのプリコンパイル
            docker-compose -f docker-compose.production.yml run --rm web bundle exec rails assets:precompile

            # Dockerコンテナの立ち上げ
            docker-compose -f docker-compose.production.yml up -d --build
          EOF
          rm private_key.pem
